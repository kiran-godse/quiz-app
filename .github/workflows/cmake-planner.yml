
name: Planner
on: 
  workflow_dispatch:
    inputs:
      force_rebuild:
        description:  'Force Rebuild'
        required:     false
        default:      false
        type:         boolean

  push:   
    branches: [ "master" ]
    paths:
      - '**/cmake-**.yml'
      - '**/cmake/**.json'

  schedule:
    - cron:  '0 0 * * 0' # “At 00:00 on every Sunday”

jobs:

  params:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    
    steps:
      - name: Checkout Codebase
        uses: actions/checkout@v3

      - name: Get Inputs
        id:   inputs
        run: |
               json_content=$(jq -c . < ./recipe/cmake/recipe.json)
               package_kind=$(echo "$json_content" | jq .package.kind)
               package_name=$(echo "$json_content" | jq .package.name)
               package_registry=$(echo "$json_content" | jq .package.registry)
               package_platforms=$(echo "$json_content" | jq .package.platforms[0])
               substrate_tag=$(echo "$json_content" | jq .substrate.tag)
               substrate_name=$(echo "$json_content" | jq .substrate.name)
               substrate_registry=$(echo "$json_content" | jq .substrate.registry)
               substrate_auth=$(echo "$json_content" | jq .substrate.needs_auth)
               source_kind=$(echo "$json_content" | jq .source.kind)
               source_name=$(echo "$json_content" | jq .ssource.name)
               source_registry=$(echo "$json_content" | jq .source.registry)
               source_version=$(echo "$json_content" | jq -r '.source.version.value')



               echo "package_kind=$package_kind" >> $GITHUB_OUTPUT
               echo "package_name=$package_name" >> $GITHUB_OUTPUT
               echo "package_registry=$package_registry" >> $GITHUB_OUTPUT
               echo "package_platforms=$package_platforms" >> $GITHUB_OUTPUT
               echo "substrate_tag=$substrate_tag" >> $GITHUB_OUTPUT
               echo "substrate_name=$substrate_name" >> $GITHUB_OUTPUT
               echo "substrate_registry=$substrate_registry" >> $GITHUB_OUTPUT
               echo "substrate_auth=$substrate_auth" >> $GITHUB_OUTPUT
               echo "source_kind=$source_kind" >> $GITHUB_OUTPUT
               echo "source_name=$substrate_name" >> $GITHUB_OUTPUT
               echo "source_registry=$substrate_registry" >> $GITHUB_OUTPUT
               echo "source_version=$substrate_version" >> $GITHUB_OUTPUT
               
               
      - name: Test Inputs
        id:   test
        run: |
                  echo "${{ steps.inputs.outputs.package_kind }}"
                  echo "${{ steps.inputs.outputs.package_name }}"
                  echo "${{ steps.inputs.outputs.package_registry }}"
                  echo "${{ steps.inputs.outputs.package_platforms }}"
                  echo "${{ steps.inputs.outputs.substrate_tag }}"
                  echo "${{ steps.inputs.outputs.substrate_name }}"
                  echo "${{ steps.inputs.outputs.substrate_registry }}"
                  echo "${{ steps.inputs.outputs.substrate_auth }}"
                  echo "${{ steps.inputs.outputs.source_kind }}"
                  echo "${{ steps.inputs.outputs.source_name }}"
                  echo "${{ steps.inputs.outputs.source_registry }}"
                  echo "${{ steps.inputs.outputs.source_version }}"
