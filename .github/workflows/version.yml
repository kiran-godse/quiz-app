name: Planner

on:
  workflow_dispatch:
    inputs:
      force_rebuild:
        description: 'Force Rebuild'
        required: false
        default: false
        type: boolean

  push:
    branches: [ "master" ]
    paths:
      - '**/cmake-**.yml'
      - '**/cmake/**.json'

  schedule:
    - cron: '0 0 * * 0' # “At 00:00 on every Sunday”

jobs:
  params:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Codebase
      uses: actions/checkout@v3

    - name: Custom JSON reader Action
      id: inputs
      uses: kiran-godse/Nodejs-Rainfall@main
      with:
        json-file: ./recipe/cmake/recipe.json
        schema-file: ./.schema/recipe.json

    - name: outputs
      id: set_output
      run: |
        json_content=$(echo '${{ steps.inputs.outputs.json }}' | jq -c .)
        package_kind=$(echo "$json_content" | jq .package.kind)
        package_name=$(echo "$json_content" | jq .package.name)
        package_registry=$(echo "$json_content" | jq .package.registry)
        package_platforms=$(echo "$json_content" | jq .package.platforms[0])
        
        echo "package_kind=$package_kind" >> $GITHUB_ENV
        echo "package_name=$package_name" >> $GITHUB_ENV
        echo "package_registry=$package_registry" >> $GITHUB_ENV
        echo "package_platforms=$package_platforms" >> $GITHUB_ENV
        

    - name: Test outputs
      id: test
      run: |
        echo "package_kind=${{ steps.set_output.outputs.package_kind }}"
        echo "package_name=${{ steps.set_output.outputs.package_name }}"
        echo "package_registry=${{ steps.set_output.outputs.package_registry }}"
        echo "package_platforms=${{ steps.set_output.outputs.package_platforms }}"
        

#   retrieve-package-metadata:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v3

#       - name: Set up Node.js
#         uses: actions/setup-node@v3
#         with:
#           node-version: '16'

#       - name: Get Package Metadata
#         id: get-metadata
#         uses: ./.github/actions/get-package-metadata@main
#         with:
#           package-name: 'gcr-demo'
#           token: ${{ secrets.GH_TOKEN }}
